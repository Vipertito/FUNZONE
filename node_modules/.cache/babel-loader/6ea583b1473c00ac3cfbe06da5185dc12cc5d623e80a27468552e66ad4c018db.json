{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91707\\\\Desktop\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\nimport { useEffect } from 'react';\nimport './App.css';\n// 87869f2a -- api key\n// custom Component\n// const Person = (props) => {\n//   return (\n//     <>\n//     <h1>Name: {props.name}</h1> \n//     {/* we can directly write the name bt upper is an advance one \n//     also we can write--\n//     const Person = () =>{\n//       return(\n//         <><h1>Name: Mainak</h1>\n//         </>\n//       )\n//     } */}\n//     <h2>Lasr Name: Banerjee</h2>\n//     <h2>Age: 22</h2>\n//     </>\n//   )\n// }\n//new project--\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey= 87869f2a';\nconst App = () => {\n  _s();\n  // const name = 'Mainak';\n  // const isNameShowing = false;\n  // const isUserLoggedIN = true;\n  // const [counter,setCounter] = useState(0);\n  // useEffect(() => {\n  //   // alert('Reload')\n  //     alert(\"You change the counter to : \" + counter)\n  // },[counter]);\n  //new project--  justunder--process to call api \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    searchMovies(\"Batman\");\n  }, []);\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //    <h1>Hello {isNameShowing ? name : 'Someone'}!!</h1>\n    //   <h1>{name}</h1> */}\n    //   {/* <h1>Hello {2 + 2}</h1> */}\n    //   {/* {name ? (\n    //     <>\n    //     <h1>{name}</h1>\n    //     </>\n    //   ) :\n    //   (\n    //     <>\n    //     <h1>test</h1>\n    //     <h2>There is no Name</h2>\n    //     </>\n    //   )} */}\n    //   {/* <Person name = {'Mainak'}/> */}\n    //   {/* and in upper here we can write also\n    //   <person/> */}\n    //   {/* 2nd thing learn */}\n    //   {/* <button onClick={() => alert('clicked')}>-</button> */}\n    //   {/* <button onClick={() => setCounter ((prevCount) => prevCount-1)}>-</button>\n    //   <h1>{counter}</h1>\n    //   <button onClick={() => setCounter ((prevCount) => prevCount+1)}>+</button>\n    // </div>\n    //make a project now\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MovieLand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search for movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SearchIcon,\n          alt: \"search\",\n          onClick: () => searchMovies(searchTerm)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No movies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  );\n};\n_s(App, \"k8BJwj14FtN/55shQ4GOCwIRzXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","API_URL","App","searchTerm","setSearchTerm","useState","movies","setMovies","searchMovies","title","response","fetch","data","json","Search","e","target","value","SearchIcon","length","map","movie"],"sources":["C:/Users/91707/Desktop/my-app/src/App.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\nimport { useEffect } from 'react';\nimport './App.css';\n// 87869f2a -- api key\n// custom Component\n// const Person = (props) => {\n//   return (\n//     <>\n//     <h1>Name: {props.name}</h1> \n//     {/* we can directly write the name bt upper is an advance one \n//     also we can write--\n//     const Person = () =>{\n//       return(\n//         <><h1>Name: Mainak</h1>\n//         </>\n//       )\n//     } */}\n//     <h2>Lasr Name: Banerjee</h2>\n//     <h2>Age: 22</h2>\n//     </>\n//   )\n// }\n//new project--\nconst API_URL = 'http://www.omdbapi.com?apikey= 87869f2a';\n\nconst App = () => {\n  // const name = 'Mainak';\n  // const isNameShowing = false;\n  // const isUserLoggedIN = true;\n  // const [counter,setCounter] = useState(0);\n  // useEffect(() => {\n  //   // alert('Reload')\n  //     alert(\"You change the counter to : \" + counter)\n  // },[counter]);\n  //new project--  justunder--process to call api \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    searchMovies(\"Batman\");\n  }, []);\n\n  const searchMovies = async (title) => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n\n    setMovies(data.Search);\n  };\n\n  return (\n    // <div>\n    //    <h1>Hello {isNameShowing ? name : 'Someone'}!!</h1>\n    //   <h1>{name}</h1> */}\n    //   {/* <h1>Hello {2 + 2}</h1> */}\n    //   {/* {name ? (\n    //     <>\n    //     <h1>{name}</h1>\n    //     </>\n    //   ) :\n    //   (\n    //     <>\n    //     <h1>test</h1>\n    //     <h2>There is no Name</h2>\n    //     </>\n    //   )} */}\n    //   {/* <Person name = {'Mainak'}/> */}\n    //   {/* and in upper here we can write also\n    //   <person/> */}\n    //   {/* 2nd thing learn */}\n    //   {/* <button onClick={() => alert('clicked')}>-</button> */}\n    //   {/* <button onClick={() => setCounter ((prevCount) => prevCount-1)}>-</button>\n    //   <h1>{counter}</h1>\n    //   <button onClick={() => setCounter ((prevCount) => prevCount+1)}>+</button>\n    // </div>\n    //make a project now\n    \n      <div className=\"app\">\n      <h1>MovieLand</h1>\n\n      <div className=\"search\">\n        <input\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Search for movies\"\n        />\n        <img\n          src={SearchIcon}\n          alt=\"search\"\n          onClick={() => searchMovies(searchTerm)}\n        />\n      </div>\n\n      {movies?.length > 0 ? (\n        <div className=\"container\">\n          {movies.map((movie) => (\n            <MovieCard movie={movie} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"empty\">\n          <h2>No movies found</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAExCL,SAAS,CAAC,MAAM;IACdQ,YAAY,CAAC,QAAQ,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,MAAKQ,KAAM,EAAC,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElCN,SAAS,CAACK,IAAI,CAACE,MAAM,CAAC;EACxB,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEE;MAAK,SAAS,EAAC,KAAK;MAAA,wBACpB;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,eAElB;QAAK,SAAS,EAAC,QAAQ;QAAA,wBACrB;UACE,KAAK,EAAEX,UAAW;UAClB,QAAQ,EAAGY,CAAC,IAAKX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC/C,WAAW,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA,QAC/B,eACF;UACE,GAAG,EAAEC,UAAW;UAChB,GAAG,EAAC,QAAQ;UACZ,OAAO,EAAE,MAAMV,YAAY,CAACL,UAAU;QAAE;UAAA;UAAA;UAAA;QAAA,QACxC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,EAEL,CAAAG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEa,MAAM,IAAG,CAAC,gBACjB;QAAK,SAAS,EAAC,WAAW;QAAA,UACvBb,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;UAAC,KAAK,EAAEA;QAAM;UAAA;UAAA;UAAA;QAAA,QACzB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,gBAEN;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAA,UAAI;QAAe;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAE3B;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;AAEV,CAAC;AAAC,GAhFInB,GAAG;AAAA,KAAHA,GAAG;AAkFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}